@page "/leaderboard"
@inject BlazorBattles50.Client.Services.ILeaderboardService LeaderboardService
@inject AuthenticationStateProvider authStateProvider
<h3>Leaderboard</h3>

@if (LeaderboardService.Leaderboard == null)
{
    <span>Loading Leaderboard...</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>User</th>
                <th>Victories</th>
                <th>Defeats</th>
                <th>Battles</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (BlazorBattles50.Shared.UserStatistic entry in LeaderboardService.Leaderboard)
            {
                <tr style="@GetMyStyle(entry.UserId)">
                    <td>@entry.Rank</td>
                    <td>@entry.Username</td>
                    <td>@entry.Victories</td>
                    <td>@entry.Defeats</td>
                    <td>@entry.Battles</td>
                    <td>
                        @if (entry.UserId != MyUserId)
                        {
                            <button class="btn btn-primary">Fight</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    int MyUserId;

    protected override async Task OnInitializedAsync()
    {
        await LeaderboardService.GetLeaderboard();
        var authState = await authStateProvider.GetAuthenticationStateAsync();

        MyUserId = int.Parse(authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);
    }

    public string GetMyStyle(int userId)
    {
        if (userId == MyUserId)
        {
            return "color:green;font-weight:600;";
        }
        else
        {
            return string.Empty;
        }
    }


}
